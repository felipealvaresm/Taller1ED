public class Matrices{


private int fila;
private int columna;
private Persona [][] MatrizPersona;
    int indiceF;
    int indiceC;

    public MatrizPersona(int fila, int columna){
        this.fila = fila;
        this.columna = columna;
        this.indiceF = -1;
        this.indiceC = -1;
        this.MatrizPersona = new Persona[fila][columna];
        
    } 
    public int getFila() {
        return fila;
    }
    public void setFila(int fila) {
        this.fila = fila;
    }
    public int getColumna() {
        return columna;
    }
    public void setColumna(int columna) {
        this.columna = columna;
    }
    public int getIndiceF() {
        return indiceF;
    }  
    public void setIndiceF(int indiceF) {
        this.indiceF = indiceF;
    }   
    public int getIndiceC() {
        return indiceC;
    }
    public void setIndiceC(int indiceC) {
        this.indiceC = indiceC;
    }
    public persona[][] getMatrizPersona() {
        return MatrizPersona;
    }
    public void setMatrizPersona(Persona[][] MatrizPersona) {
        this.MatrizPersona = MatrizPersona;
}

public boolean MatrizVacia(){
    if(indiceF == -1 && indiceC == -1){
        return true;   
    }else{
        return false;
    
    }
}
public boolean MatrizLlena(){
    if(indiceF == fila -1 && indiceC == columna -1){
        return true;
    }else{
        return false;
    }  
}
public void mostrarMatriz(){
    for(int i = 0; i <= indiceF; i++){
        for(int j = 0; j <= indiceC; j++){
            System.out.println(MatrizPersona[i][j]);
        }
    }
    }
 public void agregarPersonaMatriz(Persona p){
    if(!MatrizLlena()){
    if (indiceF != fila && indiceC != columna){
        if(indiceC < columna -1){
            indiceC++;
        }else{
            indiceF++;
            indiceC = 0;
        }
        MatrizPersona[indiceF][indiceC] = p;
        System.out.println("Persona agregada exitosamente: " + p);
    }
    }
    }
}



 //if( indiceF == fila -1 && indiceC == columna-1){